//Dockerfile

FROM php:8.2-apache

# Instalare extensii necesare pentru Laravel și MySQL Client
RUN apt-get update && apt-get install -y \
    libzip-dev \
    unzip \
    git \
    curl \
    libicu-dev \
    libonig-dev \
    libpng-dev \
    libjpeg-dev \
    libfreetype6-dev \
    libmagickwand-dev \
    libexif-dev \
    nodejs \
    npm \
    default-mysql-client && \
    docker-php-ext-configure gd --with-freetype --with-jpeg && \
    docker-php-ext-install zip pdo_mysql bcmath pcntl gd intl exif && \
    pecl install imagick && \
    docker-php-ext-enable imagick

# Activare module Apache
RUN a2enmod rewrite headers

# Instalare Node.js și npm
RUN curl -fsSL https://deb.nodesource.com/setup_20.x | bash - \
    && apt-get install -y nodejs \
    && npm install -g npm@latest

# Instalare Composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer

# Setare director de lucru
WORKDIR /var/www/html

# Copiere fișiere aplicație
COPY ./ohmydoc /var/www/html

# Setare permisiuni pentru Laravel
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 775 /var/www/html/storage /var/www/html/bootstrap/cache

# Configurare VirtualHost pentru Apache
RUN echo '<VirtualHost *:80>\n\
    DocumentRoot /var/www/html/public\n\
    <Directory /var/www/html/public>\n\
        Options Indexes FollowSymLinks\n\
        AllowOverride All\n\
        Require all granted\n\
    </Directory>\n\
</VirtualHost>' > /etc/apache2/sites-available/000-default.conf

# Expunere port
EXPOSE 80

//docker-compose.yml
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ohmydoc_app
    volumes:
      - ./ohmydoc:/var/www/html
      - ./ohmydoc/storage:/var/www/html/storage
      - ./ohmydoc/bootstrap/cache:/var/www/html/bootstrap/cache
      - ~/.ssh/id_rsa:/root/.ssh/id_rsa:ro # Montează cheia privată
      - ~/.ssh/id_rsa.pub:/root/.ssh/id_rsa.pub:ro # Montează cheia publică
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
    networks:
      - shared
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.ohmydoc.rule=Host(`ohmydoc.test`)"
      - "traefik.http.services.ohmydoc.loadbalancer.server.port=80"

  db:
    image: mysql:8.0
    container_name: ohmydoc_db
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ohmydoc
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_TCP_PORT: 3308 # Setează portul MySQL în container
    ports:
      - "3308:3308" 
    networks:
      - shared

networks:
  shared:
    external: true
